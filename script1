#!/bin/bash

set -xeuo pipefail

CONFIG_FILE=".git/config.count"

read_counter() {
  if [ -f "$CONFIG_FILE" ]; then
    read counter < "$CONFIG_FILE"
  else
    counter=0
  fi
  echo $counter
}

write_counter() {
  echo $1 > "$CONFIG_FILE"
}

gcc main.c -o main

if [ $? -eq 0 ]; then
  echo "compilazione OK"
  counter=$(read_counter)
  # cd /home/jenkins/workspace/task1
  git add main
  counter=$((counter + 1))


  git checkout -b master2
  git commit -m "Aggiunto eseguibile compilato Nr. $counter"
  write_counter "$counter"
  git branch -r
  # git fetch origin
  # git checkout master
  



  # (Optional) If necessary, merge the new branch into master after resolving any conflicts
  # git merge new-branch-name

  git checkout master

  # (Optional) If necessary, merge the new branch into master after resolving any conflicts
  git merge master2

  # Push the changes to the remote repository (assuming origin is your remote)
  git push origin master



  # Utilizza git credential-fill per riempire le credenziali
  # git push -u origin master --credential-fill

  # Utilizza il plugin Git di Jenkins per il push
  # git gc
  # branch="master"
  # credentialsId="8dc5c0da-8691-4b2d-992f-1124c7bce39c"
  # sh -c "git push -u origin $branch --credentials-id $credentialsId"

  exit 0
else
  echo "Errore durante la compilazione"
  exit 1
fi